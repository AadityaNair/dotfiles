# vim: ft=zsh
#export PKG_CONFIG_PATH=/usr/lib/pkgconfig
#TODO: What if `most` or `nvim`  doesn't exist
#export MANPAGER="most"
export EDITOR="nvim"
################ ALIASES #############################

# Random useful aliases
alias cat='bat'
alias htop='TERM=screen htop'
alias ip='ip -color'
alias irssi='TERM=screen-256color irssi'
alias kb='kubectl'
alias noproxy='unset {http,https,ftp,socks,no}_proxy'
alias open="xdg-open"
alias py='ipython3 --no-banner --autoindent --pprint'
alias tmux='tmux attach || tmux new'
alias tst='ping www.google.com'
alias vim='nvim'
alias youtube-dl='youtube-dl -o"%(title)s.%(ext)s"'

# Get all config files in one shot
alias dots="cd $INSTALL/dotfiles/"

alias crc="vim $INSTALL/dotfiles/zsh/company.sh"
alias frc="vim $INSTALL/dotfiles/zsh/config.fish"
alias src="vim $INSTALL/dotfiles/zsh/shell_commons"
alias trc="vim $INSTALL/dotfiles/tmux/tmux.conf"
alias vrc="vim $INSTALL/dotfiles/vim/init.vim"
alias zrc="vim $INSTALL/dotfiles/zsh/zshrc;source ~/.zshrc"


# CD aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias -- -='cd -'

# LS aliases
alias ls='exa --group-directories-first'
#alias lsa='ls -lah'
#alias l='ls -lah'
alias ll='ls -lh'
alias la='ls -lAh'
alias sl='ls'

################ FUNCTIONS #####################

function mk () {
    mkdir -p "$*"
    cd "$*"
}

function spectrum() {
    for i in {0..255}; do
        printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
    done
}

function myip(){
    curl http://ipecho.net/plain
    printf '\n'
}

function extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)        tar xjf $1        ;;
            *.tar.gz)         tar xzf $1        ;;
            *.bz2)            bunzip2 $1        ;;
            *.rar)            unrar x $1        ;;
            *.gz)             gunzip $1         ;;
            *.tar)            tar xf $1         ;;
            *.tbz2)           tar xjf $1        ;;
            *.tgz)            tar xzf $1        ;;
            *.zip)            unzip $1          ;;
            *.Z)              uncompress $1     ;;
            *.7z)             7zr e $1          ;;
            *)                echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}


# clipcopy - Copy data to clipboard
# Usage:
#  <command> | clipcopy    - copies stdin to clipboard
#  clipcopy <file>         - copies a file's contents to clipboard
function clipcopy() {
  emulate -L zsh
  local file=$1
    if which xclip &>/dev/null; then
      if [[ -z $file ]]; then
        xclip -in -selection clipboard
      else
        xclip -in -selection clipboard $file
      fi
    elif which xsel &>/dev/null; then
      if [[ -z $file ]]; then
        xsel --clipboard --input
      else
        cat "$file" | xsel --clipboard --input
      fi
  fi
}


# clippaste - "Paste" data from clipboard to stdout
# Usage:
#   clippaste   - writes clipboard's contents to stdout
#   clippaste | <command>    - pastes contents and pipes it to another process
#   clippaste > <file>      - paste contents to a file
function clippaste() {
  emulate -L zsh
    if which xclip &>/dev/null; then
      xclip -out -selection clipboard
    elif which xsel &>/dev/null; then
      xsel --clipboard --output
    fi
}

# Lazy load kubectl completions
function kubectl() {
    if ! type __start_kubectl >/dev/null 2>&1; then
        source <(command kubectl completion zsh)
        compdef kb=kubectl
    fi

    command kubectl "$@"
}

# Added nvm function because nvm loading takes a ton of time.
# With this, nvm will load once I type nvm once and will override this function
# So for every terminal type nvm twice
function nvm(){
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}
