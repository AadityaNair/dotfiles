# Setup default install location
# zmodload zsh/zprof
export INSTALL=$HOME/.config/
# Testing version of LS_COLORS.
# export LS_COLORS="di=1;34:ln=0;36:pi=0;33:bd=1;33:cd=1;33:so=1;31:ex=1;32:*README=1;4;33:*README.txt=1;4;33:*README.md=1;4;33:*readme.txt=1;4;33:*readme.md=1;4;33:*.ninja=1;4;33:*Makefile=1;4;33:*Cargo.toml=1;4;33:*SConstruct=1;4;33:*CMakeLists.txt=1;4;33:*build.gradle=1;4;33:*pom.xml=1;4;33:*Rakefile=1;4;33:*package.json=1;4;33:*Gruntfile.js=1;4;33:*Gruntfile.coffee=1;4;33:*BUILD=1;4;33:*BUILD.bazel=1;4;33:*WORKSPACE=1;4;33:*build.xml=1;4;33:*Podfile=1;4;33:*webpack.config.js=1;4;33:*meson.build=1;4;33:*composer.json=1;4;33:*RoboFile.php=1;4;33:*PKGBUILD=1;4;33:*Justfile=1;4;33:*Procfile=1;4;33:*Dockerfile=1;4;33:*Containerfile=1;4;33:*Vagrantfile=1;4;33:*Brewfile=1;4;33:*Gemfile=1;4;33:*Pipfile=1;4;33:*build.sbt=1;4;33:*mix.exs=1;4;33:*bsconfig.json=1;4;33:*tsconfig.json=1;4;33:*.zip=0;31:*.tar=0;31:*.Z=0;31:*.z=0;31:*.gz=0;31:*.bz2=0;31:*.a=0;31:*.ar=0;31:*.7z=0;31:*.iso=0;31:*.dmg=0;31:*.tc=0;31:*.rar=0;31:*.par=0;31:*.tgz=0;31:*.xz=0;31:*.txz=0;31:*.lz=0;31:*.tlz=0;31:*.lzma=0;31:*.deb=0;31:*.rpm=0;31:*.zst=0;31:*.lz4=0;31"
# ----------------------------  Plugin Configuration  --------------------------
export ZPLUG_HOME=$HOME/.local/share/zplug
export ZPLUG_LOADFILE=$ZPLUG_HOME/packages.zsh
export ZPLUG_ERROR_LOG=$ZPLUG_HOME/error.log
export ZPLUG_BIN=$ZPLUG_HOME/bin
export ZPLUG_CACHE_DIR=$ZPLUG_HOME/cache
export ZPLUG_REPOS=$ZPLUG_HOME/repos
source $ZPLUG_HOME/init.zsh  # Plugin config import

zplug "zsh-users/zsh-completions"
zplug "AadityaNair/fast-syntax-highlighting", defer:2
zplug "zsh-users/zsh-history-substring-search"
zplug "eendroroy/zed-zsh"
# Ideas for new features:
# marlonrichert/zsh-autocomplete
# marlonrichert/zsh-snap (very useful with Ansible)


# Have a separate theme for machines that aren't mine
if [[ ! -n "$SSH_CLIENT" ]] || [[ ! -n "$SSH_TTY" ]];then
    zplug "AadityaNair/agnoster-zsh-theme", as:theme
else
    zplug "dracula/zsh", as:theme
fi

if ! zplug check; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load


# ----------------------------  Plugin Specific Settings  --------------------------

HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='underline'
# ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=white,bold'
# ZSH_AUTOSUGGEST_USE_ASYNC=1
# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=239'

zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down

# ----------------------------  ZSH Features  ------------------------------

setopt extended_glob
setopt complete_aliases
setopt autocd

# ----------------------------  History Settings  ----------------------------

HISTFILE=$HOME/.local/share/zsh_history
HISTSIZE=100000
SAVEHIST=100000

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_find_no_dups
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_verify
# setopt inc_append_history
setopt share_history # share command history data

# ----------------------------  Auto Completion Settings ----------------------

zstyle ':completion:*:*:*:*:*' menu select # Allow moving across selections using arrow keys

zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes

zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# Increase the number of errors based on the length of the typed word.
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# Don't complete unavailable commands.
zstyle ':completion:*:functions' ignored-patterns '(_*|pre(cmd|exec))'

# Array completion element sorting.
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# Directories
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select
zstyle ':completion:*:-tilde-:*' group-order 'named-directories' 'path-directories' 'users' 'expand'
zstyle ':completion:*' squeeze-slashes true

# History
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' menu yes
zstyle ':completion:*:ssh:*' hosts off

# ----------------------------  Boilerplate  ------------------------------


source $INSTALL/dotfiles/zsh/zsh_specific.zsh
source $INSTALL/dotfiles/zsh/shell_commons.sh
source $INSTALL/dotfiles/zsh/company.sh
source $INSTALL/dotfiles/zsh/titles.zsh

if [[ $OSTYPE == "darwin"* ]]; then
    source $INSTALL/dotfiles/zsh/macOS.sh
else
    source $INSTALL/dotfiles/zsh/linux.sh
fi
